<%-
require 'net/http'
require 'uri'
require 'json'
# move to https://github.com/dalen/puppet-puppetdbquery in future
if @imports.empty? 
  return "  slave_servers {}\n  slave_servers_notify {}\n}\n"
end
headers = { 'Accept' => 'application/json' }
query    = ['and', ['=', 'exported', true], ['~', 'tag', "(#{@imports.join('|')})"]]
uri      = '/pdb/query/v4/resources/Knot::Remote'
uri      += URI.escape("?query=#{query.to_json}")
http     = Net::HTTP.new(@puppetdb_server, @puppetdb_port)
begin
  response = http.get(uri, headers)
  if response.code != "200"
    scope.call_function(
      'warning',
      ["unable to connect to the puppet server, exported resources wont work: #{response.code}"])
  end
  response_json = JSON.parse(response.body)
rescue Exception => e
  scope.call_function('warning', ["unable to connect to the puppetdb server, exported resources wont work: #{e}"])
  return "slave_servers {}\nslave_servers_notify {}\n}\n"
end
-%>
  slave_servers {
<%-    
response_json.each_with_index do |slave, index|
  last = response_json.size - 1 == index
  ipv4_address = slave['parameters'].include?('address4')
  ipv6_address = slave['parameters'].include?('address6')
  if ipv4_address
-%>
    <%= slave['title'] %>-ipv4<%- if ! last || ipv6_address -%>,<%- end %>
<%-
  end
  if ipv6_address
-%>
    <%= slave['title'] %>-ipv6<%- if ! last -%>,<%- end %>
<%-
  end
end
-%>
  }
  slave_servers_notify {
<%-
response_json.each_with_index do |slave, index|
  last = response_json.size - 1 == index
  ipv4_address = slave['parameters'].include?('address4')
  ipv6_address = slave['parameters'].include?('address6')
  if ipv4_address
-%>
    <%= slave['title'] %>-ipv4-notify<%- if ! last || ipv6_address -%>,<%- end %>
<%-
  end
  if ipv6_address
-%>
    <%= slave['title'] %>-ipv6-notify<%- if ! last -%>,<%- end %>
<%-
  end
end
-%>
  }
}
