<%-
require 'net/http'
require 'json'
begin
  http     = Net::HTTP.new(@puppetdb_server, @puppetdb_port)
  request  = Net::HTTP::Get.new('/pdb/query/v4/resources/Knot::Remote')
  response = http.request(request)
  if response.code != "200"
    scope.call_function(
      'warning',
      ["unable to connect to the puppet server, exported resources wont work: #{response.code}"])
  end
  response_json = JSON.parse(response.body)
rescue Exception => e
  scope.call_function('warning', ["unable to connect to the puppetdb server, exported resources wont work: #{e}"])
  return "slave_servers {}\nslave_servers_notify {}\n}\n"
end
slave_resources = response_json.collect do |resource|
  if resource['certname'] == @trusted['certname'] && resource['title'] =~ /dns__export_.+/
    resource
  end
end
slave_resources.compact!
-%>
  slave_servers {
<%-    
slave_resources.each_with_index do |slave, index|
  last = slave_resources.size - 1 == index
  ipv4_address = slave['parameters'].include?('address4')
  ipv6_address = slave['parameters'].include?('address6')
  if ipv4_address
-%>
    <%= slave['title'] %>-ipv4<%- if ! last || ipv6_address -%>,<%- end %>
<%-
  end
  if ipv6_address
-%>
    <%= slave['title'] %>-ipv6<%- if ! last -%>,<%- end %>
<%-
  end
end
-%>
  }
  slave_servers_notify {
<%-
slave_resources.each_with_index do |slave, index|
  last = slave_resources.size - 1 == index
  ipv4_address = slave['parameters'].include?('address4')
  ipv6_address = slave['parameters'].include?('address6')
  if ipv4_address
-%>
    <%= slave['title'] %>-ipv4-notify<%- if ! last || ipv6_address -%>,<%- end %>
<%-
  end
  if ipv6_address
-%>
    <%= slave['title'] %>-ipv6-notify<%- if ! last -%>,<%- end %>
<%-
  end
end
-%>
  }
}
